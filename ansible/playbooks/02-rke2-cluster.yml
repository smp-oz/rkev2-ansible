---
# RKE2 Cluster Installation Playbook - GPG Fix Version
# Updated to use RKE2 v1.28.15+rke2r1 with complete GPG bypass

- name: Initialize RKE2 on first master node
  hosts: k8s_masters[0]
  become: yes
  serial: 1
  vars:
    rke2_type: server
  tasks:
    - name: Create RKE2 config directory
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'

    - name: Generate static cluster token
      set_fact:
        static_cluster_token: "{{ 'rke2-token-' + ansible_date_time.epoch + '-' + inventory_hostname }}"

    - name: Create RKE2 server config for first master
      copy:
        dest: /etc/rancher/rke2/config.yaml
        content: |
          token: {{ static_cluster_token }}
          cluster-cidr: {{ cluster_cidr }}
          service-cidr: {{ service_cidr }}
          tls-san:
            - {{ ansible_default_ipv4.address }}
            - {{ rancher_hostname }}
          disable:
            - rke2-ingress-nginx
        mode: '0644'

    - name: Store static token for sharing
      copy:
        content: "{{ static_cluster_token }}"
        dest: /tmp/cluster_token_static
        mode: '0600'

    - name: Remove problematic RKE2 repositories
      shell: |
        rm -f /etc/yum.repos.d/rancher-rke2*.repo
        rm -f /etc/yum.repos.d/rke2*.repo
        yum clean all
      ignore_errors: yes

    - name: Disable GPG verification globally
      lineinfile:
        path: /etc/yum.conf
        line: "gpgcheck=0"
        create: yes

    - name: Install RKE2 server on primary master (direct download)
      shell: |
        curl -sfL https://get.rke2.io | \
        INSTALL_RKE2_VERSION={{ rke2_version }} \
        INSTALL_RKE2_TYPE=server \
        INSTALL_RKE2_SKIP_SELINUX_RPM=true \
        sh -
      args:
        creates: /usr/local/bin/rke2

    - name: Enable and start RKE2 server
      systemd:
        name: rke2-server
        enabled: yes
        state: started

    - name: Wait for RKE2 server to be ready
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 30
        timeout: 300

    - name: Create kubectl symlink
      file:
        src: /var/lib/rancher/rke2/bin/kubectl
        dest: /usr/local/bin/kubectl
        state: link

    - name: Setup kubeconfig
      shell: |
        mkdir -p ~/.kube
        cp /etc/rancher/rke2/rke2.yaml ~/.kube/config
        chmod 600 ~/.kube/config
        sed -i 's/127.0.0.1/{{ ansible_default_ipv4.address }}/g' ~/.kube/config

    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm

    - name: Read the cluster token (backup to static)
      slurp:
        src: /var/lib/rancher/rke2/server/node-token
      register: node_token
      ignore_errors: yes

    - name: Store actual node token if available
      copy:
        content: "{{ node_token.content | b64decode | trim }}"
        dest: /tmp/cluster_token
        mode: '0600'
      when: not (node_token.failed | default(false))

- name: Install RKE2 on remaining master nodes
  hosts: k8s_masters[1:]
  become: yes
  serial: 1
  vars:
    rke2_type: server
  tasks:
    - name: Create RKE2 config directory
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'

    - name: Get cluster token from primary master
      slurp:
        src: /var/lib/rancher/rke2/server/node-token
      register: cluster_token_file
      delegate_to: "{{ groups['k8s_masters'][0] }}"
      ignore_errors: yes

    - name: Fallback to static token if node-token not available
      slurp:
        src: /tmp/cluster_token_static
      register: static_token_file
      delegate_to: "{{ groups['k8s_masters'][0] }}"
      when: cluster_token_file.failed | default(false)

    - name: Set cluster token variable (from node-token)
      set_fact:
        cluster_token: "{{ cluster_token_file.content | b64decode | trim }}"
      when: not (cluster_token_file.failed | default(false))

    - name: Set cluster token variable (from static token)
      set_fact:
        cluster_token: "{{ static_token_file.content | b64decode | trim }}"
      when: cluster_token_file.failed | default(false)

    - name: Create RKE2 server config for additional masters
      copy:
        dest: /etc/rancher/rke2/config.yaml
        content: |
          server: https://{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}:9345
          token: {{ cluster_token }}
          cluster-cidr: {{ cluster_cidr }}
          service-cidr: {{ service_cidr }}
          tls-san:
            - {{ ansible_default_ipv4.address }}
            - {{ rancher_hostname }}
          disable:
            - rke2-ingress-nginx
        mode: '0644'

    - name: Remove problematic RKE2 repositories
      shell: |
        rm -f /etc/yum.repos.d/rancher-rke2*.repo
        rm -f /etc/yum.repos.d/rke2*.repo
        yum clean all
      ignore_errors: yes

    - name: Disable GPG verification globally
      lineinfile:
        path: /etc/yum.conf
        line: "gpgcheck=0"
        create: yes

    - name: Install RKE2 server on additional masters (direct download)
      shell: |
        curl -sfL https://get.rke2.io | \
        INSTALL_RKE2_VERSION={{ rke2_version }} \
        INSTALL_RKE2_TYPE=server \
        INSTALL_RKE2_SKIP_SELINUX_RPM=true \
        sh -
      args:
        creates: /usr/local/bin/rke2

    - name: Enable and start RKE2 server
      systemd:
        name: rke2-server
        enabled: yes
        state: started

    - name: Wait for RKE2 server to be ready
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 30
        timeout: 300

    - name: Create kubectl symlink
      file:
        src: /var/lib/rancher/rke2/bin/kubectl
        dest: /usr/local/bin/kubectl
        state: link

    - name: Setup kubeconfig
      shell: |
        mkdir -p ~/.kube
        cp /etc/rancher/rke2/rke2.yaml ~/.kube/config
        chmod 600 ~/.kube/config
        sed -i 's/127.0.0.1/{{ ansible_default_ipv4.address }}/g' ~/.kube/config

- name: Install RKE2 on worker nodes
  hosts: k8s_workers
  become: yes
  vars:
    rke2_type: agent
  tasks:
    - name: Create RKE2 config directory
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'

    - name: Get cluster token from primary master
      slurp:
        src: /var/lib/rancher/rke2/server/node-token
      register: cluster_token_file
      delegate_to: "{{ groups['k8s_masters'][0] }}"
      ignore_errors: yes

    - name: Fallback to static token if node-token not available
      slurp:
        src: /tmp/cluster_token_static
      register: static_token_file
      delegate_to: "{{ groups['k8s_masters'][0] }}"
      when: cluster_token_file.failed | default(false)

    - name: Set cluster token variable (from node-token)
      set_fact:
        cluster_token: "{{ cluster_token_file.content | b64decode | trim }}"
      when: not (cluster_token_file.failed | default(false))

    - name: Set cluster token variable (from static token)
      set_fact:
        cluster_token: "{{ static_token_file.content | b64decode | trim }}"
      when: cluster_token_file.failed | default(false)

    - name: Create RKE2 agent config
      copy:
        dest: /etc/rancher/rke2/config.yaml
        content: |
          server: https://{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}:9345
          token: {{ cluster_token }}
        mode: '0644'

    - name: Remove problematic RKE2 repositories
      shell: |
        rm -f /etc/yum.repos.d/rancher-rke2*.repo
        rm -f /etc/yum.repos.d/rke2*.repo
        yum clean all
      ignore_errors: yes

    - name: Disable GPG verification globally
      lineinfile:
        path: /etc/yum.conf
        line: "gpgcheck=0"
        create: yes

    - name: Install RKE2 agent on workers (direct download)
      shell: |
        curl -sfL https://get.rke2.io | \
        INSTALL_RKE2_VERSION={{ rke2_version }} \
        INSTALL_RKE2_TYPE=agent \
        INSTALL_RKE2_SKIP_SELINUX_RPM=true \
        sh -
      args:
        creates: /usr/local/bin/rke2-agent

    - name: Enable and start RKE2 agent
      systemd:
        name: rke2-agent
        enabled: yes
        state: started

    - name: Wait for RKE2 agent to be ready
      wait_for:
        port: 10250
        host: "{{ ansible_default_ipv4.address }}"
        delay: 30
        timeout: 300

- name: Install and configure Helm on first master
  hosts: k8s_masters[0]
  become: yes
  tasks:
    - name: Add Helm repositories
      shell: |
        /usr/local/bin/helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
        /usr/local/bin/helm repo add jetstack https://charts.jetstack.io
        /usr/local/bin/helm repo update
      environment:
        KUBECONFIG: /etc/rancher/rke2/rke2.yaml

    - name: Verify cluster nodes
      shell: /usr/local/bin/kubectl get nodes
      environment:
        KUBECONFIG: /etc/rancher/rke2/rke2.yaml
      register: cluster_nodes

    - name: Display cluster status
      debug:
        msg: "{{ cluster_nodes.stdout_lines }}"
