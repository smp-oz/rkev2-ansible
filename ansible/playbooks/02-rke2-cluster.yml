---
# RKE2 Cluster Installation Playbook
# Installs RKE2 on both master nodes (as servers) and worker nodes (as agents)
# First master node initializes the cluster, others join as servers/agents

- name: Initialize RKE2 on first master node
  hosts: k8s_masters[0]
  become: yes
  serial: 1
  vars:
    rke2_type: server
  tasks:
    - name: Create RKE2 config directory
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'

    - name: Create RKE2 server config for first master
      copy:
        dest: /etc/rancher/rke2/config.yaml
        content: |
          token: {{ ansible_date_time.epoch }}{{ inventory_hostname }}rke2token
          cluster-cidr: {{ cluster_cidr }}
          service-cidr: {{ service_cidr }}
          tls-san:
            - {{ ansible_default_ipv4.address }}
            - {{ rancher_hostname }}
          disable:
            - rke2-ingress-nginx
        mode: '0644'

    - name: Download RKE2 installation script
      get_url:
        url: https://get.rke2.io
        dest: /tmp/rke2-install.sh
        mode: '0755'

    - name: Install RKE2 server
      shell: |
        INSTALL_RKE2_VERSION={{ rke2_version }} \
        INSTALL_RKE2_TYPE=server \
        /tmp/rke2-install.sh
      args:
        creates: /usr/local/bin/rke2

    - name: Enable and start RKE2 server
      systemd:
        name: rke2-server
        enabled: yes
        state: started

    - name: Wait for RKE2 server to be ready
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 30
        timeout: 300

    - name: Create kubectl symlink
      file:
        src: /var/lib/rancher/rke2/bin/kubectl
        dest: /usr/local/bin/kubectl
        state: link

    - name: Setup kubeconfig
      shell: |
        mkdir -p ~/.kube
        cp /etc/rancher/rke2/rke2.yaml ~/.kube/config
        chmod 600 ~/.kube/config
        sed -i 's/127.0.0.1/{{ ansible_default_ipv4.address }}/g' ~/.kube/config

    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm

    - name: Read the cluster token
      slurp:
        src: /var/lib/rancher/rke2/server/node-token
      register: node_token

    - name: Set cluster token fact globally
      set_fact:
        cluster_token: "{{ node_token.content | b64decode | trim }}"
        
    - name: Add cluster token to hostvars for all hosts
      add_host:
        name: "{{ item }}"
        cluster_token: "{{ node_token.content | b64decode | trim }}"
      loop: "{{ groups['k8s_masters'] + groups['k8s_workers'] }}"
      delegate_to: localhost

- name: Install RKE2 on remaining master nodes
  hosts: k8s_masters[1:]
  become: yes
  serial: 1
  vars:
    rke2_type: server
  tasks:
    - name: Create RKE2 config directory
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'

    - name: Create RKE2 server config for additional masters
      copy:
        dest: /etc/rancher/rke2/config.yaml
        content: |
          server: https://{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}:9345
          token: {{ cluster_token }}
          cluster-cidr: {{ cluster_cidr }}
          service-cidr: {{ service_cidr }}
          tls-san:
            - {{ ansible_default_ipv4.address }}
            - {{ rancher_hostname }}
          disable:
            - rke2-ingress-nginx
        mode: '0644'

    - name: Download RKE2 installation script
      get_url:
        url: https://get.rke2.io
        dest: /tmp/rke2-install.sh
        mode: '0755'

    - name: Install RKE2 server
      shell: |
        INSTALL_RKE2_VERSION={{ rke2_version }} \
        INSTALL_RKE2_TYPE=server \
        /tmp/rke2-install.sh
      args:
        creates: /usr/local/bin/rke2

    - name: Enable and start RKE2 server
      systemd:
        name: rke2-server
        enabled: yes
        state: started

    - name: Wait for RKE2 server to be ready
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 30
        timeout: 300

    - name: Create kubectl symlink
      file:
        src: /var/lib/rancher/rke2/bin/kubectl
        dest: /usr/local/bin/kubectl
        state: link

    - name: Setup kubeconfig
      shell: |
        mkdir -p ~/.kube
        cp /etc/rancher/rke2/rke2.yaml ~/.kube/config
        chmod 600 ~/.kube/config
        sed -i 's/127.0.0.1/{{ ansible_default_ipv4.address }}/g' ~/.kube/config

- name: Install RKE2 on worker nodes
  hosts: k8s_workers
  become: yes
  vars:
    rke2_type: agent
  tasks:
    - name: Create RKE2 config directory
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'

    - name: Create RKE2 agent config
      copy:
        dest: /etc/rancher/rke2/config.yaml
        content: |
          server: https://{{ hostvars[groups['k8s_masters'][0]]['ansible_default_ipv4']['address'] }}:9345
          token: {{ cluster_token }}
        mode: '0644'

    - name: Download RKE2 installation script
      get_url:
        url: https://get.rke2.io
        dest: /tmp/rke2-install.sh
        mode: '0755'

    - name: Install RKE2 agent
      shell: |
        INSTALL_RKE2_VERSION={{ rke2_version }} \
        INSTALL_RKE2_TYPE=agent \
        /tmp/rke2-install.sh
      args:
        creates: /usr/local/bin/rke2-agent

    - name: Enable and start RKE2 agent
      systemd:
        name: rke2-agent
        enabled: yes
        state: started

    - name: Wait for RKE2 agent to be ready
      wait_for:
        port: 10250
        host: "{{ ansible_default_ipv4.address }}"
        delay: 30
        timeout: 300

- name: Install and configure Helm on first master
  hosts: k8s_masters[0]
  become: yes
  tasks:
    - name: Add Helm repositories
      shell: |
        /usr/local/bin/helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
        /usr/local/bin/helm repo add jetstack https://charts.jetstack.io
        /usr/local/bin/helm repo update
      environment:
        KUBECONFIG: /etc/rancher/rke2/rke2.yaml

    - name: Verify cluster nodes
      shell: /usr/local/bin/kubectl get nodes
      environment:
        KUBECONFIG: /etc/rancher/rke2/rke2.yaml
      register: cluster_nodes

    - name: Display cluster status
      debug:
        msg: "{{ cluster_nodes.stdout_lines }}"
